use pnpm
keep documentations in the README.md and update when necessary

you can always add a section in .cursorrules when you need to add a new rule for more specific cases and context 


# Project Type
Next.js application with TypeScript and GraphQL authentication

# Key Technologies
- Next.js 14.1.0
- TypeScript
- Apollo Client for GraphQL
- TailwindCSS
- shadcn/ui components
- React Hook Form
- Zod for validation

# Authentication Flow
- Client ID based authentication
- Token storage per client
- Protected route handling
- SSO capabilities

# Security Requirements
- CSRF protection
- HTTP-only cookies
- Rate limiting
- Token refresh mechanism

# Project Structure
/src
  /context                # Context providers
  /app                     # Next.js app router pages
    /auth                 # Authentication pages
      /google            # Google OAuth handling
      /callback         # Auth callbacks
      /error           # Error handling
    /dashboard          # Protected dashboard
  /components           # React components
    /auth              # Authentication components
      /login-form     # Login form component
      /register-form  # Registration form
      /dapp-selector # Application selector
    /ui               # Shared UI components
      /animated      # Animation components
      /form         # Form elements
      /loading     # Loading states
  /lib                  # Utilities and configurations
    /apollo            # Apollo Client setup
    /auth             # Authentication context & utils
      /dapps         # Dapp configurations
      /token        # Token management
    /graphql          # GraphQL operations
    /types           # TypeScript types
    /utils          # Helper utilities
  /middleware.ts       # Auth middleware

# Authentication Methods
- Google OAuth
- Email/Password (GraphQL)

# Key Features
- Protected routes with middleware
- Form validation
- Dark/Light theme support
- Custom UI components
- Toast notifications
- Password visibility toggle
- Responsive design

# Environment Variables Required
NEXT_PUBLIC_GRAPHQL_URI
NEXT_PUBLIC_CLIENT_ID
NEXT_PUBLIC_GOOGLE_CLIENT_ID

# Package Manager
pnpm

# Image Handling Rules
- Place all static images in /public/logos directory
- Use WebP format for brand logos for optimal performance
- Provide fallback images in PNG format if needed
- Image dimensions should be optimized for web (max 180px width for logos)
- Use Next.js Image component with proper optimization settings
- Handle loading and error states gracefully

# Commit Message Conventions
Format: <type>(<scope>): <subject>

Types:
- feat: New feature or enhancement
- fix: Bug fix
- refactor: Code refactoring without feature change
- style: Code style/formatting changes
- docs: Documentation changes
- test: Adding or modifying tests
- chore: Maintenance tasks, dependencies, etc.
- perf: Performance improvements
- ci: CI/CD related changes
- revert: Revert previous changes

Scope:
- auth: Authentication related changes
- ui: UI components and styling
- api: API and GraphQL changes
- types: TypeScript type definitions
- deps: Dependency updates
- config: Configuration changes
- theme: Theme and styling system
- test: Test-related changes
- docs: Documentation updates

Guidelines:
- Subject line should be clear and concise (max 72 chars)
- Use imperative mood ("Add" not "Added" or "Adds")
- No period at the end of subject line
- Provide detailed description in commit body if needed
- Reference issues/PRs in commit body when applicable

Examples:
- feat(auth): add Google OAuth integration
- fix(ui): resolve button color inconsistency in dark mode
- refactor(api): optimize GraphQL query performance
- style(theme): update color variables for better contrast
- docs(readme): update installation instructions
- test(auth): add unit tests for token refresh
- chore(deps): update Next.js to v14.1.0